name: Wheel builder

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
  # Manual run
  workflow_dispatch:

jobs:
  # Build the wheels for Linux, Windows and macOS for Python 3.7 and newer
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        include:
          # Window 64 bit
          # Note: windows-2019 is needed for older Python versions:
          # https://github.com/scikit-learn/scikit-learn/issues/22530
          - os: windows-2019
            python: 37
            bitness: 64
            platform_id: win_amd64
          - os: windows-2019
            python: 38
            bitness: 64
            platform_id: win_amd64
          - os: windows-latest
            python: 39
            bitness: 64
            platform_id: win_amd64
          - os: windows-latest
            python: 310
            bitness: 64
            platform_id: win_amd64

          # Window 32 bit
          - os: windows-latest
            python: 37
            bitness: 32
            platform_id: win32
          - os: windows-latest
            python: 38
            bitness: 32
            platform_id: win32
          - os: windows-latest
            python: 39
            bitness: 32
            platform_id: win32

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 37
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # Linux 64 bit manylinux2010
          - os: ubuntu-latest
            python: 37
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2010
          - os: ubuntu-latest
            python: 38
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2010
          - os: ubuntu-latest
            python: 39
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2010

          # NumPy on Python 3.10 only supports 64bit and is only available with manylinux2014
          - os: ubuntu-latest
            python: 310
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            bitness: 64
            python: 37
            platform_id: macosx_x86_64
          - os: macos-latest
            bitness: 64
            python: 38
            platform_id: macosx_x86_64
          - os: macos-latest
            bitness: 64
            python: 39
            platform_id: macosx_x86_64
          - os: macos-latest
            bitness: 64
            python: 310
            platform_id: macosx_x86_64

          # MacOS arm64
          - os: macos-latest
            bitness: 64
            python: 38
            platform_id: macosx_arm64
          - os: macos-latest
            bitness: 64
            python: 39
            platform_id: macosx_arm64
          - os: macos-latest
            bitness: 64
            python: 310
            platform_id: macosx_arm64

    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # update once build dependencies are available

      - name: Instaell cibuildwheel
      run: python -m pip install cibuildwheel==2.3.1

      - name: Build and test wheels
        env:
          CONFTEST_PATH: ${{ github.workspace }}/conftest.py
          CONFTEST_NAME: conftest.py
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_TEST_SKIP: "*-macosx_arm64"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: bash build_tools/github/repair_windows_wheels.sh {wheel} {dest_dir} ${{ matrix.bitness }}
          CIBW_BEFORE_TEST_WINDOWS: bash build_tools/github/build_minimal_windows_image.sh ${{ matrix.python }} ${{ matrix.bitness }}
          CIBW_TEST_REQUIRES: pytest pandas threadpoolctl
          CIBW_TEST_COMMAND: bash {project}/build_tools/github/test_wheels.sh
          CIBW_TEST_COMMAND_WINDOWS: bash {project}/build_tools/github/test_windows_wheels.sh ${{ matrix.python }} ${{ matrix.bitness }}
          CIBW_BUILD_VERBOSITY: 1

        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  # Build the source distribution under Linux
  build_sdist:
    name: Source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ginza
        uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # update once build dependencies are available

      - name: Build source distribution
        run: bash build_tools/github/build_source.sh
        env:

      - name: Test source distribution
        run: bash build_tools/github/test_source.sh
        env:

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
